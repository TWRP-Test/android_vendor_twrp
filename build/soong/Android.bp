// TWRP soong configs

bootstrap_go_package {
    name: "soong-twrp-generator",
    pkgPath: "twrp/soong/generator",
    deps: [
        "blueprint",
        "blueprint-pathtools",
        "soong",
        "soong-android",
        "soong-shared",
    ],
    srcs: [
        "generator/generator.go",
        "generator/variables.go",
    ],
    pluginFor: ["soong_build"],
}

twrp_generator {
    name: "generated_kernel_includes",

    // The headers make command
    cmd: "$(PATH_OVERRIDE_SOONG) $(KERNEL_MAKE_CMD) $(KERNEL_MAKE_FLAGS) -C $(TARGET_KERNEL_HEADERS_SOURCE) O=$(KERNEL_BUILD_OUT_PREFIX)$(genDir) ARCH=$(KERNEL_ARCH) $(KERNEL_CROSS_COMPILE) headers_install",

    // Directories that can be imported by a cc_* module generated_headers property
    export_include_dirs: [
        "usr/audio/include/uapi",
        "usr/include",
        "usr/include/audio/include/uapi",
        "usr/techpack/audio/include",
    ],

    // Sources for dependency tracking
    dep_root: "$(TARGET_KERNEL_HEADERS_SOURCE)",
    dep_files: [
        "Makefile",
        "include/**/*",
        "arch/$(KERNEL_ARCH)/include/**/*",
        "techpack/audio/include/**/*",
    ],
}

cc_library_headers {
    name: "generated_kernel_headers",
    generated_headers: ["generated_kernel_includes"],
    export_generated_headers: ["generated_kernel_includes"],
    vendor_available: true,
    recovery_available: true,
}

soong_config_module_type {
    name: "vendor_init",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    value_variables: ["target_init_vendor_lib"],
    properties: ["whole_static_libs"],
}

vendor_init {
    name: "vendor_init_defaults",
    soong_config_variables: {
        target_init_vendor_lib: {
            whole_static_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "enforce_ab_ota_partition_list",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    bool_variables: ["target_enforce_ab_ota_partition_list"],
    properties: ["cflags"],
}

enforce_ab_ota_partition_list {
    name: "enforce_ab_ota_partition_list_defaults",
    soong_config_variables: {
        target_enforce_ab_ota_partition_list: {
            cflags: ["-DTARGET_ENFORCE_AB_OTA_PARTITION_LIST"],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    bool_variables: ["supports_hw_fde"],
    value_variables: ["hw_fde_cryptfs_hw_header_lib_name", "hw_fde_cryptfs_hw_shared_lib_name"],
    properties: [
        "cflags",
        "header_libs",
        "shared_libs",
    ],
}

vold_hw_fde {
    name: "vold_hw_fde_defaults",
    soong_config_variables: {
        supports_hw_fde: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPTION"],
        },
        hw_fde_cryptfs_hw_header_lib_name: {
            header_libs: ["%s"],
        },
        hw_fde_cryptfs_hw_shared_lib_name: {
            shared_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "vold_hw_fde_perf",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    bool_variables: ["supports_hw_fde_perf"],
    value_variables: ["hw_fde_cryptfs_hw_shared_lib_name"],
    properties: [
        "cflags",
        "shared_libs",
    ],
}

vold_hw_fde_perf {
    name: "vold_hw_fde_perf_defaults",
    soong_config_variables: {
        supports_hw_fde_perf: {
            cflags: ["-DCONFIG_HW_DISK_ENCRYPT_PERF"],
        },
        hw_fde_cryptfs_hw_shared_lib_name: {
            shared_libs: ["%s"],
        },
    },
}

soong_config_module_type {
    name: "legacy_hw_disk_encryption",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    bool_variables: ["legacy_hw_disk_encryption"],
    properties: ["cppflags"],
}

legacy_hw_disk_encryption {
    name: "legacy_hw_disk_encryption_defaults",
    soong_config_variables: {
        legacy_hw_disk_encryption: {
            cppflags: ["-DLEGACY_HW_DISK_ENCRYPTION"],
        },
    },
}

soong_config_module_type {
    name: "twrp",
    module_type: "cc_defaults",
    config_namespace: "twrpGlobalVars",
    value_variables: [
    "tw_delay_touch_init_ms",
    //"tw_use_key_code_touch_sync",
    "tw_ozip_decrypt_key",
    "tw_x_offset",
    "tw_y_offset",
    "tw_w_offset",
    "tw_h_offset",
    "tw_framerate",
    "target_recovery_overscan_percent",
    "tw_input_blacklist",
    //"tw_whitelist_input",
    "tw_support_input_aidl_haptics_fqname",
    "tw_brightness_path",
    "tw_max_brightness",
],
    bool_variables: [
        "tw_event_logging",
        "tw_no_screen_blank",
        "tw_no_screen_timeout",
        "tw_oem_build",
        "tw_round_screen",
        "tw_support_input_1_2_haptics",
        "tw_target_uses_qcom_bsp",
        "tw_include_jpeg",
        "recovery_touchscreen_swap_xy",
        "recovery_touchscreen_flip_x",
        "recovery_touchscreen_flip_y",
        "recovery_graphics_force_use_linelength",
        "recovery_graphics_force_single_buffer",
        "twrp_event_logging",
        "tw_screen_blank_on_boot",
        "tw_fbiopan",
        "tw_ignore_major_axis_0",
        "tw_ignore_mt_position_0",
        "tw_haptics_tspdrv",
        "tw_exclude_nano",
        "tw_support_input_aidl_haptics",
        "tw_support_input_aidl_haptics_fix_off",
        "tw_use_samsung_haptics",
],
    properties: ["cflags"],
}

twrp {
    name: "twrp_defaults",
    soong_config_variables: {
        tw_delay_touch_init_ms: {
            cflags: ["-DTW_DELAY_TOUCH_INIT_MS=%s"]
        },
        //tw_use_key_code_touch_sync: {
            //cflags: ["-DTW_USE_KEY_CODE_TOUCH_SYNC=%s"]
        //},
       tw_event_logging: {
            cflags: ["-D_EVENT_LOGGING"]
        },
        tw_ozip_decrypt_key: {
            cflags: ["-DTW_OZIP_DECRYPT_KEY=\"%s\""]
        },
        tw_no_screen_blank: {
            cflags: ["-DTW_NO_SCREEN_BLANK"]
        },
        tw_no_screen_timeout: {
            cflags: ["-DTW_NO_SCREEN_TIMEOUT"]
        },
        tw_oem_build: {
            cflags: ["-DTW_OEM_BUILD"]
        },
        tw_x_offset: {
            cflags: ["-DTW_X_OFFSET=%s"]
        },
        tw_y_offset: {
            cflags: ["-DTW_Y_OFFSET=%s"]
        },
        tw_w_offset: {
            cflags: ["-DTW_W_OFFSET=%s"]
        },
        tw_h_offset: {
            cflags: ["-DTW_H_OFFSET=%s"]
        },
        tw_framerate: {
            cflags: ["-DTW_FRAMERATE=%s"]
        },
        tw_round_screen: {
            cflags: ["-DTW_ROUND_SCREEN"]
        },
        tw_support_input_1_2_haptics: {
            cflags: ["-DUSE_QTI_HAPTICS"]
        },
        tw_target_uses_qcom_bsp: {
            cflags: ["-DMSM_BSP"]
        },
        tw_include_jpeg: {
            cflags: ["-DTW_INCLUDE_JPEG"]
        },
        recovery_touchscreen_swap_xy: {
            cflags: ["-DRECOVERY_TOUCHSCREEN_SWAP_XY"]
        },
        recovery_touchscreen_flip_x: {
            cflags: ["-DRECOVERY_TOUCHSCREEN_FLIP_X"]
        },
        recovery_touchscreen_flip_y: {
            cflags: ["-DRECOVERY_TOUCHSCREEN_FLIP_Y"]
        },
        recovery_graphics_force_use_linelength: {
            cflags: ["-DRECOVERY_GRAPHICS_FORCE_USE_LINELENGTH"]
        },
        recovery_graphics_force_single_buffer: {
            cflags: ["-DRECOVERY_GRAPHICS_FORCE_SINGLE_BUFFER"]
        },
        twrp_event_logging: {
            cflags: ["-DTWRP_EVENT_LOGGING"]
        },
        target_recovery_overscan_percent: {
            cflags: ["-DOVERSCAN_PERCENT=%s"]
        },
        tw_screen_blank_on_boot: {
            cflags: ["-DTW_SCREEN_BLANK_ON_BOOT"]
        },
        tw_fbiopan: {
            cflags: ["-DTW_FBIOPAN"]
        },
        tw_ignore_major_axis_0: {
            cflags: ["-DTW_IGNORE_MAJOR_AXIS_0"]
        },
        tw_ignore_mt_position_0: {
            cflags: ["-DTW_IGNORE_MT_POSITION_0"]
        },
        tw_input_blacklist: {
            cflags: ["-DTW_INPUT_BLACKLIST=\"%s\""]
        },
        //tw_whitelist_input: {
            //cflags: ["-DWHITELIST_INPUT=\"%s\""]
        //},
        tw_haptics_tspdrv: {
            cflags: ["-DTW_HAPTICS_TSPDRV"]
        },
        tw_exclude_nano: {
            cflags: ["-DTW_EXCLUDE_NANO"]
        },
        tw_support_input_aidl_haptics: {
            cflags: ["-DUSE_QTI_AIDL_HAPTICS"]
        },
        tw_support_input_aidl_haptics_fqname: {
            cflags: ["-DUSE_QTI_AIDL_HAPTICS_FQNAME=\"%s\""]
        },
        tw_support_input_aidl_haptics_fix_off: {
             cflags: ["-DUSE_QTI_AIDL_HAPTICS_FIX_OFF"]
        },
        tw_use_samsung_haptics: {
             cflags: ["-DUSE_SAMSUNG_HAPTICS"]
        },
        tw_brightness_path: {
             cflags: ["-DTW_BRIGHTNESS_PATH=\"%s\""]
        },
        tw_max_brightness: {
            cflags: ["-DTW_MAX_BRIGHTNESS=%s"]
        },
    },
}
